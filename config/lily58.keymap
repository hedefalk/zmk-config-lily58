/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_sv.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layers
#define Qwerty 0
#define ColeDH 1
#define Sym 2
#define Numpad 3

#define SV_PLUS_
/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                           &kp N6      &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB     &kp Q   &kp W   &kp E     &kp R     &kp T                            &kp Y       &kp U      &kp I      &kp O    &kp P     &kp LBKT
&kp LSHIFT  &kp A   &kp S   &kp D     &kp F     &kp G                            &kp H       &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LCTRL   &kp Z   &kp X   &kp C     &kp V     &kp B    &kp SPACE    &kp BSPC   &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                            &kp LALT  &kp LGUI  &mo Sym  &kp RET      &kp SPACE  &mo Sym     &kp BSPC   &none 
            >;
        };

        colemak_dh { 
            bindings = <
&trans  &trans  &trans  &trans    &trans    &trans                          &trans      &trans     &trans     &trans   &trans    &kp BSPC
&trans  &kp Q   &kp W   &kp F     &kp P     &kp B                           &kp J       &kp L      &kp U      &kp Y    &kp SEMI  &kp LBKT
&trans  &kp A   &kp R   &kp S     &kp T     &kp G                           &kp M       &kp N      &kp E      &kp I    &kp O     &kp APOS
&trans  &kp Z   &kp X   &kp C     &kp D     &kp V   &trans       &trans     &kp K       &kp H      &trans     &trans   &kp FSLH  &kp RET
                        &trans    &trans    &trans  &trans       &trans     &trans      &trans     &trans 
            >;
        };

        layer2 {
            bindings = <
&kp ESC       &kp F1        &kp F2         &kp F3    &kp F4      &kp F5                       &kp F6     &kp F7     &kp F8     &kp F9    &kp F10      &kp DEL
&bt BT_SEL 0  &bt BT_SEL 1  &trans         &trans    &trans      &trans                       &trans     &trans     &trans     &trans    &kp MINUS    &kp EQUAL
&trans        &trans        &trans         &trans    &trans      &trans                       &trans     &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT    &kp RBKT
&trans        &kp GRAVE     &kp LS(GRAVE)  &trans    &trans      &trans     &trans    &trans  &trans     &none      &none      &none     &none        &kp BACKSLASH
                                           &trans    &trans      &trans     &trans    &trans  &trans     &trans     &trans
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans                     &trans       &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &trans    &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &kp KP_N7    &kp KP_N8      &kp KP_N9        &kp PLUS      &trans    &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &kp KP_N4    &kp KP_N5      &kp KP_N6        &trans        &trans    &trans
&trans  &trans  &trans  &trans   &trans   &trans  &trans     &trans  &kp KP_N1    &kp KP_N2      &kp KP_N3        &kp RET       &trans    &trans
                        &trans   &trans   &trans  &trans     &trans  &kp KP_N0    &kp COMMA      &kp DOT 
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lock {
            timeout-ms = <50>;
            key-positions = <0 11>;
            //bindings = <&kp LOCK>; // Windows
            bindings = <&kp LG(LC(Q))>; // Mac
        };

        toggle_numpad {
            bindings = <&tog Numpad>;
            key-positions = <52 55>;
        };

        toggle_colemak {
            bindings = <&tog ColeDH>;
            key-positions = <0 12>;
        };
    };
};
ÃŸ